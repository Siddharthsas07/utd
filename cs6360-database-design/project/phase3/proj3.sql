-- Gary Steelman
-- project 3 sql

-- TABLE CREATION
-- This is done in a different order than listed in the documentation so we
-- avoid having to alter tables to add FK constraints

spool output.txt

set echo on

DROP TABLE LIBRARY CASCADE CONSTRAINTS;
DROP TABLE PUBLISHER CASCADE CONSTRAINTS;
DROP TABLE R_RESOURCE CASCADE CONSTRAINTS;
DROP TABLE RESOURCE_LOCATION CASCADE CONSTRAINTS;
DROP TABLE BOOK CASCADE CONSTRAINTS;
DROP TABLE VIDEO CASCADE CONSTRAINTS;
DROP TABLE MAG_PAP CASCADE CONSTRAINTS;
DROP TABLE AUTHOR CASCADE CONSTRAINTS;
DROP TABLE CITY CASCADE CONSTRAINTS;
DROP TABLE PERSON CASCADE CONSTRAINTS;
DROP TABLE EMPLOYEE CASCADE CONSTRAINTS;
DROP TABLE VOLUNTEER CASCADE CONSTRAINTS;
DROP TABLE READER CASCADE CONSTRAINTS;
DROP TABLE GUEST CASCADE CONSTRAINTS;
DROP TABLE HOST CASCADE CONSTRAINTS;
DROP TABLE ATTENDEE CASCADE CONSTRAINTS;
DROP TABLE EVENT CASCADE CONSTRAINTS;
DROP TABLE BORROWER CASCADE CONSTRAINTS;
DROP TABLE BORROWS CASCADE CONSTRAINTS;
DROP TABLE RERSERVES CASCADE CONSTRAINTS;
DROP TABLE CREATES CASCADE CONSTRAINTS;
DROP TABLE FUNDS CASCADE CONSTRAINTS;
DROP TABLE HOSTS CASCADE CONSTRAINTS;
DROP TABLE ATTENDS CASCADE CONSTRAINTS;
DROP TABLE MAG_PAP_SUBJECT CASCADE CONSTRAINTS;
DROP TABLE AUTHOR_PHONE CASCADE CONSTRAINTS;
DROP TABLE PUBLISHER_EMAIL CASCADE CONSTRAINTS;
DROP TABLE PUBLISHER_PHONE CASCADE CONSTRAINTS;

DROP VIEW BORROWED_RESOURCES;
DROP VIEW LIKED_EVENTS;
DROP VIEW RESOURCES_OUT_ON_DATE;

CREATE TABLE LIBRARY (
Name VARCHAR(60) NOT NULL,
PRIMARY KEY(Name)
);

CREATE TABLE PUBLISHER (
Name VARCHAR(30) NOT NULL UNIQUE,
Webpage_url VARCHAR(60) NOT NULL UNIQUE,
PRIMARY KEY (Name, Webpage_url)
);

CREATE TABLE R_RESOURCE (
Call_num CHAR(8) NOT NULL,
Name VARCHAR(60) NOT NULL,
Borrow_status VARCHAR(25) NOT NULL,
Reading_status VARCHAR(25) NOT NULL,
P_name VARCHAR(60) NOT NULL,
PRIMARY KEY (Call_num),
FOREIGN KEY (P_name) REFERENCES PUBLISHER(Name) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE
);

CREATE TABLE RESOURCE_LOCATION (
R_num CHAR(8) NOT NULL,
L_name VARCHAR(60) NOT NULL,
PRIMARY KEY (R_num, L_name),
FOREIGN KEY (R_num) REFERENCES R_RESOURCE(Call_num) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE,
FOREIGN KEY (L_name) REFERENCES LIBRARY(Name) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE
);

CREATE TABLE BOOK (
R_num CHAR(8) NOT NULL UNIQUE,
Summary VARCHAR(500) NOT NULL,
PRIMARY KEY (R_num, Summary),
FOREIGN KEY (R_num) REFERENCES R_RESOURCE(Call_num) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE
);

CREATE TABLE VIDEO (
R_num CHAR(8) NOT NULL UNIQUE,
V_format VARCHAR(10) NOT NULL,
PRIMARY KEY (R_num, V_format),
FOREIGN KEY (R_num) REFERENCES R_RESOURCE(Call_num) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE
);

CREATE TABLE MAG_PAP (
R_num CHAR(8) NOT NULL UNIQUE,
Publishing_cycle VARCHAR(20) NOT NULL,
PRIMARY KEY (R_num, Publishing_cycle),
FOREIGN KEY (R_num) REFERENCES R_RESOURCE(Call_num) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE
);

CREATE TABLE AUTHOR (
Author_ID CHAR(5) NOT NULL,
F_name VARCHAR(20) NOT NULL,
L_name VARCHAR(20) NOT NULL,
PRIMARY KEY (Author_ID)
);

CREATE TABLE CITY (
Name VARCHAR(60) NOT NULL,
C_state VARCHAR(15) NOT NULL,
PRIMARY KEY(Name, C_state)
);

CREATE TABLE PERSON (
Person_ID CHAR(9) NOT NULL,
F_name VARCHAR(60) NOT NULL,
L_name VARCHAR(60) NOT NULL,
Age INT NOT NULL,
Rd VARCHAR(30) NOT NULL,
Ap VARCHAR(30),
City VARCHAR(30) NOT NULL,
C_State VARCHAR(30) NOT NULL,
Zip INT NOT NULL,
PRIMARY KEY (Person_ID)
);

CREATE TABLE EMPLOYEE (
P_ID CHAR(9) NOT NULL,
Responsibility VARCHAR(60),
PRIMARY KEY (P_ID),
FOREIGN KEY (P_ID) REFERENCES PERSON(Person_ID) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE
);

CREATE TABLE VOLUNTEER (
P_ID CHAR(9) NOT NULL,
Timeslots INT NOT NULL,
Weekdays INT NOT NULL,
PRIMARY KEY (P_ID),
FOREIGN KEY (P_ID) REFERENCES PERSON(Person_ID) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE
);

CREATE TABLE READER (
P_ID CHAR(9) NOT NULL,
C_name VARCHAR(60) NOT NULL,
C_state VARCHAR(15) NOT NULL,
PRIMARY KEY (P_ID),
FOREIGN KEY (P_ID) REFERENCES PERSON(Person_ID) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE
);

CREATE TABLE GUEST (
R_ID CHAR(9) NOT NULL,
F_name VARCHAR(60) NOT NULL,
L_name VARCHAR(60) NOT NULL,
PRIMARY KEY (R_ID, F_name, L_name),
FOREIGN KEY (R_ID) REFERENCES READER(P_ID) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE
);

CREATE TABLE HOST (
Host_ID INT NOT NULL,
E_ID CHAR(9),
V_ID CHAR(9),
PRIMARY KEY (Host_ID),
FOREIGN KEY (E_ID) REFERENCES EMPLOYEE(P_ID) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE,
FOREIGN KEY (V_ID) REFERENCES VOLUNTEER(P_ID) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE
);

CREATE TABLE ATTENDEE (
Attendee_ID INT NOT NULL,
G_f VARCHAR(60),
G_l VARCHAR(60),
R_ID CHAR(9),
PRIMARY KEY (Attendee_ID),
FOREIGN KEY (R_ID, G_f, G_l) REFERENCES GUEST(R_ID, F_name, L_name) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE,
FOREIGN KEY (R_ID) REFERENCES READER(P_ID) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE
);

CREATE TABLE EVENT (
Event_ID INT NOT NULL,
Introduction VARCHAR(500) NOT NULL,
E_time TIMESTAMP NOT NULL,
PRIMARY KEY (Event_ID)
);

CREATE TABLE BORROWER (
Borrower_ID INT NOT NULL,
G_f VARCHAR(60),
G_l VARCHAR(60),
R_ID CHAR(9),
PRIMARY KEY (Borrower_ID),
FOREIGN KEY (R_ID, G_f, G_l) REFERENCES GUEST(R_ID, F_name, L_name) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE,
FOREIGN KEY (R_ID) REFERENCES READER(P_ID) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE
);

CREATE TABLE BORROWS (
R_num CHAR(8) NOT NULL,
B_ID INT NOT NULL,
Borrow_date DATE NOT NULL,
Due_date DATE NOT NULL,
Return_date DATE,
PRIMARY KEY (R_num, B_ID, Borrow_date),
FOREIGN KEY (R_num) REFERENCES R_RESOURCE(Call_num) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE,
FOREIGN KEY (B_ID) REFERENCES BORROWER(Borrower_ID) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE
);

CREATE TABLE RERSERVES (
R_num CHAR(8) NOT NULL,
B_ID INT NOT NULL,
Reserve_date DATE NOT NULL,
PRIMARY KEY(R_num, B_ID, Reserve_date),
FOREIGN KEY (R_num) REFERENCES R_RESOURCE(Call_num) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE,
FOREIGN KEY (B_ID) REFERENCES BORROWER(Borrower_ID) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE
);

CREATE TABLE CREATES (
A_ID CHAR(5) NOT NULL,
R_num,
PRIMARY KEY(A_ID, R_num),
FOREIGN KEY (R_num) REFERENCES R_RESOURCE(Call_num) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE,
FOREIGN KEY (A_ID) REFERENCES AUTHOR(Author_ID) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE
);

CREATE TABLE FUNDS (
C_name VARCHAR(60) NOT NULL,
C_state VARCHAR(15) NOT NULL,
L_name VARCHAR(60) NOT NULL,
PRIMARY KEY (C_name, C_state, L_name),
FOREIGN KEY (C_name, C_state) REFERENCES CITY(Name, C_state) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE,
FOREIGN KEY (L_name) REFERENCES LIBRARY(Name) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE
);

CREATE TABLE HOSTS (
H_ID INT NOT NULL,
E_ID INT NOT NULL,
City VARCHAR(60) NOT NULL,
PRIMARY KEY (H_ID, E_ID),
FOREIGN KEY (H_ID) REFERENCES HOST(Host_ID) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE,
FOREIGN KEY (E_ID) REFERENCES EVENT(Event_ID) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE
);

CREATE TABLE ATTENDS (
A_ID INT NOT NULL,
E_ID INT NOT NULL,
Rating INT NOT NULL,
PRIMARY KEY (A_ID, E_ID),
FOREIGN KEY (A_ID) REFERENCES ATTENDEE(Attendee_ID) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE,
FOREIGN KEY (E_ID) REFERENCES EVENT(Event_ID) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE
);

CREATE TABLE MAG_PAP_SUBJECT (
Mp_num CHAR(8) NOT NULL,
Subject VARCHAR(20) NOT NULL,
PRIMARY KEY (Mp_num, Subject),
FOREIGN KEY (Mp_num) REFERENCES MAG_PAP(R_num) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE
);

CREATE TABLE AUTHOR_PHONE (
A_ID CHAR(5) NOT NULL,
Phone_num CHAR(12) NOT NULL,
PRIMARY KEY (A_ID, Phone_num),
FOREIGN KEY (A_ID) REFERENCES AUTHOR(Author_ID) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE
);

CREATE TABLE PUBLISHER_EMAIL (
P_name VARCHAR(30) NOT NULL,
Email VARCHAR(42) NOT NULL UNIQUE,
PRIMARY KEY(P_name, Email),
FOREIGN KEY (P_name) REFERENCES PUBLISHER(Name) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE
);

CREATE TABLE PUBLISHER_PHONE (
P_name VARCHAR(30) NOT NULL,
Phone_num CHAR(12) NOT NULL UNIQUE,
PRIMARY KEY(P_name, Phone_num),
FOREIGN KEY (P_name) REFERENCES PUBLISHER(Name) ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE
);

-- view1
CREATE VIEW BORROWED_RESOURCES AS
SELECT UNIQUE R_num, B_ID
FROM BORROWS;

-- view2
CREATE VIEW LIKED_EVENTS AS 
SELECT Event_ID, Introduction
FROM EVENT
WHERE Event_ID IN (
  SELECT E_ID
  FROM ATTENDS
  GROUP BY E_ID
  HAVING AVG(Rating) > 60
);

-- view3
CREATE VIEW RESOURCES_OUT_ON_DATE AS
SELECT R_ID, R_num
FROM BORROWER, BORROWS
WHERE ('20-Nov-10' BETWEEN Borrow_date AND Return_date) AND (Borrower_ID = B_ID);

-- insert some example data
-- example publishers
INSERT INTO PUBLISHER (Name, Webpage_url)
VALUES ('PENGUINS', 'penguins@penguingroup.boom');
INSERT INTO PUBLISHER (Name, Webpage_url)
VALUES ('Random House', 'randomhousepublishing@rh.com');

-- example authors
INSERT INTO AUTHOR (Author_ID, F_name, L_name)
VALUES ('00001', 'Austin', 'Steelman');
INSERT INTO AUTHOR (Author_ID, F_name, L_name)
VALUES ('12345', 'Kate', 'Beckensale');

-- example libraries
INSERT INTO LIBRARY (Name)
VALUES ('Mid continent Library');
INSERT INTO LIBRARY (Name)
VALUES ('Reading Rainbow Library');

-- example resources
INSERT INTO R_RESOURCE (Call_num, Name, Borrow_status, Reading_status, P_name)
VALUES ('abcdefgh', 'Game of Thrones', 'unavailable', 'for borrow', 'Random House');
INSERT INTO R_RESOURCE (Call_num, Name, Borrow_status, Reading_status, P_name)
VALUES ('eeeeeee4', '1984', 'available', 'in library reading only', 'Random House');
INSERT INTO R_RESOURCE (Call_num, Name, Borrow_status, Reading_status, P_name)
VALUES ('12345678', 'The Lord of The Rings', 'unavailable', 'in library reading only', 'PENGUINS');
INSERT INTO R_RESOURCE (Call_num, Name, Borrow_status, Reading_status, P_name)
VALUES ('hunter42', 'Star Wars', 'available', 'for borrow', 'PENGUINS');
INSERT INTO R_RESOURCE (Call_num, Name, Borrow_status, Reading_status, P_name)
VALUES ('lolololo', 'Of Mice and Database Troubles', 'available', 'for borrow', 'PENGUINS');

-- example resource locations
INSERT INTO RESOURCE_LOCATION (R_num, L_name)
VALUES ('abcdefgh', 'Mid continent Library');
INSERT INTO RESOURCE_LOCATION (R_num, L_name)
VALUES ('eeeeeee4', 'Reading Rainbow Library');
INSERT INTO RESOURCE_LOCATION (R_num, L_name)
VALUES ('12345678', 'Mid continent Library');
INSERT INTO RESOURCE_LOCATION (R_num, L_name)
VALUES ('hunter42', 'Reading Rainbow Library');

-- example books
INSERT INTO BOOK (R_num, Summary)
VALUES ('abcdefgh', 'Politics, Swords, Whitewalkers, and Drama');
INSERT INTO BOOK (R_num, Summary)
VALUES ('eeeeeee4', 'BIG BROTHER IS WATCHING YOU');

-- example videos
INSERT INTO VIDEO (R_num, V_format)
VALUES ('12345678', 'DVD');

-- example magzines
INSERT INTO MAG_PAP (R_num, Publishing_cycle)
VALUES ('hunter42', 'Weekly');

-- example people
INSERT INTO PERSON (Person_ID, F_name, L_name, Age, Rd, Ap, City, C_state, Zip)
VALUES ('gxs112030', 'Gary', 'Steelman', 23, '2200 Waterview Pkwy', 'Apt 2134', 'Richardson', 'TX', 75080);
INSERT INTO PERSON (Person_ID, F_name, L_name, Age, Rd, Ap, City, C_state, Zip)
VALUES ('ams000000', 'Annie', 'Slaughter', 70, '1408 Madison 1400', NULL, 'Huntsville', 'AR', 12345);
INSERT INTO PERSON (Person_ID, F_name, L_name, Age, Rd, Ap, City, C_state, Zip)
VALUES ('vuu111111', 'Vanessa', 'Underwood', 0, '1234 Somewhere Rd', NULL, 'Cape...Geraudeau', 'MO', 65236);
INSERT INTO PERSON (Person_ID, F_name, L_name, Age, Rd, Ap, City, C_state, Zip)
VALUES ('red222222', 'Randal', 'Derpystuff', 85, '1234 Somewhere Rd', NULL, 'Springfield', 'MO', 65298);
INSERT INTO PERSON (Person_ID, F_name, L_name, Age, Rd, Ap, City, C_state, Zip)
VALUES ('ams123456', 'Austin', 'Steelman', 38, '11th St', NULL, 'Blue Springs', 'MO', 64015);

-- example volunteers
INSERT INTO VOLUNTEER (P_ID, Timeslots, Weekdays)
VALUES ('gxs112030', 0, 5);
INSERT INTO VOLUNTEER (P_ID, Timeslots, Weekdays)
VALUES ('red222222', 15, 25);

-- example cities
INSERT INTO CITY (Name, C_state)
VALUES ('Richardson', 'TX');
INSERT INTO CITY (Name, C_state)
VALUES ('Springfield', 'MO');

-- example READERS
INSERT INTO READER (P_ID, C_name, C_state)
VALUES ('gxs112030', 'Richardson', 'TX');
INSERT INTO READER (P_ID, C_name, C_state)
VALUES ('red222222', 'Springfield', 'MO');

-- example employees
INSERT INTO EMPLOYEE (P_ID, Responsibility)
VALUES ('ams000000', 'Librarian');
INSERT INTO EMPLOYEE (P_ID, Responsibility)
VALUES ('gxs112030', 'Librarian');
INSERT INTO EMPLOYEE (P_ID, Responsibility)
VALUES ('ams123456', 'Entertainment Prodigy');

-- example guests
INSERT INTO GUEST (F_name, L_name, R_ID)
VALUES ('Katy', 'Steelman', 'gxs112030');
INSERT INTO GUEST (F_name, L_name, R_ID)
VALUES ('John', 'Slaughter', 'ams000000');

-- example events
INSERT INTO EVENT (Event_ID, Introduction, E_time)
VALUES(15, 'How to speed read', to_timestamp('2010/10/10:12:00:00AM', 'yyyy/mm/dd:hh:mi:ssam'));

-- example hosts
INSERT INTO HOST (Host_ID, E_ID, V_ID)
VALUES (1, 'ams123456', NULL);

-- example attendees
INSERT INTO ATTENDEE (Attendee_ID, G_f, G_l, R_ID)
VALUES (1, 'Katy', 'Steelman', 'gxs112030');
INSERT INTO ATTENDEE (Attendee_ID, G_f, G_l, R_ID)
VALUES (2, NULL, NULL, 'red222222');

-- example borrowers
INSERT INTO BORROWER (Borrower_ID, G_f, G_l, R_ID)
VALUES (1, 'Katy', 'Steelman', 'gxs112030');
INSERT INTO BORROWER (Borrower_ID, G_f, G_l, R_ID)
VALUES (2, NULL, NULL, 'red222222');

-- example borrows
INSERT INTO BORROWS (R_num, B_ID, Borrow_date, Due_date, Return_date)
VALUES ('abcdefgh', 1, '19-Nov-10', '29-Nov-10', NULL);
INSERT INTO BORROWS (R_num, B_ID, Borrow_date, Due_date, Return_date)
VALUES ('eeeeeee4', 2, '18-Nov-10', '30-Nov-10', '28-Nov-10');
INSERT INTO BORROWS (R_num, B_ID, Borrow_date, Due_date, Return_date)
VALUES ('eeeeeee4', 2, '18-Nov-10', '23-Nov-10', '28-Nov-10');

-- example reserves

-- example creates
INSERT INTO CREATES (A_ID, R_num)
VALUES ('00001', 'abcdefgh');
INSERT INTO CREATES (A_ID, R_num)
VALUES ('12345', '12345678');

-- example funds
INSERT INTO FUNDS (C_name, C_state, L_name)
VALUES ('Richardson', 'TX', 'Reading Rainbow Library');
INSERT INTO FUNDS (C_name, C_state, L_name)
VALUES ('Richardson', 'TX', 'Mid continent Library');

-- example attends
INSERT INTO ATTENDS (A_ID, E_ID, Rating) 
VALUES (1, 15, 62);
INSERT INTO ATTENDS (A_ID, E_ID, Rating) 
VALUES (2, 15, 59);

-- example mag subjects
INSERT INTO MAG_PAP_SUBJECT(Mp_num, Subject)
VALUES( 'hunter42', 'Fashion' );
INSERT INTO MAG_PAP_SUBJECT(Mp_num, Subject)
VALUES( 'hunter42', 'Explosions' );

-- example author phones
-- n/a for answering phase 3 queries

-- example publisher emails
-- n/a for answering phase 3 queries

-- example plublisher phones
-- n/a for answering phase 3 queries

-- perform requsted queries
-- n/a for answering phase 3 queries

-- 1 
-- requires helen to be a person first
INSERT INTO PERSON (Person_ID, F_name, L_name, Age, Rd, Ap, City, C_state, Zip)
VALUES ('hxl000000', 'Helen', 'Liou', 45, '123 Library Rd', NULL, 'Readersville', 'TX', 75080);
INSERT INTO VOLUNTEER (P_ID, Timeslots, Weekdays)
VALUES ('hxl000000', 12, 6);

-- 2
SELECT R_num
FROM BORROWS
GROUP BY R_num
HAVING COUNT(R_num) > 10;

-- 3
SELECT Person_ID, City
FROM PERSON 
WHERE City IN (
  SELECT UNIQUE City
  FROM FUNDS
  INTERSECT
  SELECT UNIQUE City
  FROM PERSON
  WHERE Person_ID IN (
    SELECT UNIQUE P_ID
    FROM VOLUNTEER
  )
);

-- 4
SELECT R_ID, R_num
FROM BORROWER, BORROWS
WHERE (Due_date = '19-Sep-10') AND (Borrower_ID = B_ID);

-- 5
SELECT Introduction
FROM (
  SELECT Introduction, COUNT(Introduction) as "count"
  FROM LIKED_EVENTS
  GROUP BY Introduction
  ORDER BY "count" DESC
  )
WHERE ROWNUM <= 1;

-- 6
SELECT Person_ID, F_name, L_name
FROM PERSON
WHERE Person_ID IN (
  SELECT P_ID 
  FROM VOLUNTEER
  WHERE Weekdays = 6
);

-- 7
SELECT F_name, L_name, R_num
FROM BORROWER, BORROWS, PERSON
WHERE 
  ( Return_date > Due_date
    OR ( Return_date = NULL AND Due_date < CURRENT_DATE )
  ) 
  AND (Borrower_ID = B_ID)
  AND (Person_ID = R_ID);

-- 8
SELECT P_name
FROM (
  SELECT P_name, COUNT(P_name) as "count"
  FROM R_RESOURCE
  GROUP BY P_name
  ORDER BY "count" DESC
  )
WHERE ROWNUM <= 1;

-- 9
-- must have person as a reader to check out stuff
INSERT INTO PERSON (Person_ID, F_name, L_name, Age, Rd, Ap, City, C_state, Zip)
VALUES ('mxl123456', 'Michelle', 'Luigi', 23, 'Rainbow Rd', NULL, 'Yoshi Island', 'MA', 10000);
INSERT INTO READER (P_ID, C_name, C_state)
VALUES ('mxl123456', 'Richardson', 'TX');
INSERT INTO BORROWER (Borrower_ID, G_f, G_l, R_ID)
VALUES (3, NULL, NULL, 'mxl123456');
INSERT INTO BORROWS (R_num, B_ID, Borrow_date, Due_date, Return_date)
VALUES ('12345678', 3, '20-Nov-10', '23-Nov-10', '23-Nov-10');

-- 10
SELECT F_name, L_name
FROM AUTHOR
WHERE Author_ID IN (
  SELECT A_ID FROM (
    SELECT A_ID, COUNT(A_ID) as "count"
    FROM CREATES
    GROUP BY A_ID
    ORDER BY "count" DESC
  )
  WHERE ROWNUM <= 1
);

-- 11
-- must first have a person and resource with the specified data
-- and person must be a reader
INSERT INTO R_RESOURCE (Call_num, Name, Borrow_status, Reading_status, P_name)
VALUES ('QA0001', 'Databases Example 11', 'unavailable', 'for borrow', 'Random House');
INSERT INTO PERSON (Person_ID, F_name, L_name, Age, Rd, Ap, City, C_state, Zip)
VALUES ('cld089000', 'Celene', 'Donatello', 23, '123 Awesome Rd', NULL, 'Yupper', 'CA', 54298);
INSERT INTO READER (P_ID, C_name, C_state)
VALUES ('cld089000', 'Richardson', 'TX');

-- 12
SELECT Call_num 
FROM R_RESOURCE
WHERE Call_num IN (
  SELECT UNIQUE R_num 
  FROM MAG_PAP
  WHERE R_num IN (
    SELECT Mp_num
    FROM MAG_PAP_SUBJECT
    WHERE Subject LIKE '%Fashion%'
  )
);


-- 13
SELECT E.Event_ID AS "Event ID", H2.E_ID AS "Employee ID", 
       H2.V_ID AS "Volunteer ID", A2.G_f AS "Guest Fname", 
       A2.G_l AS "Guest Lname", A2.R_ID AS "Reader ID"
FROM EVENT E, HOSTS H1, HOST H2, ATTENDS A1, ATTENDEE A2
WHERE E.Event_ID = H1.E_ID
  AND E.Event_ID = A1.E_ID
  AND H1.H_ID = H2.Host_ID
  AND A1.A_ID = A2.Attendee_ID
  AND E.E_time = to_timestamp('2010/10/10:12:00:00AM', 'yyyy/mm/dd:hh:mi:ssam');

-- 14
SELECT Person_ID, L_name 
FROM PERSON
WHERE Person_ID NOT IN (
  SELECT UNIQUE R_ID 
  FROM GUEST
);

-- 15


-- 16
SELECT F_name, L_name 
FROM PERSON
WHERE Person_ID IN (
  SELECT P_ID
  FROM READER
  WHERE P_ID IN (
    SELECT R_ID
    FROM ATTENDEE A
    WHERE NOT EXISTS (
      SELECT Introduction
      FROM EVENT E1
        MINUS
      SELECT Introduction
      FROM EVENT E2, ATTENDS A1, ATTENDEE A2
      WHERE A_ID = Attendee_ID
        AND E2.Event_ID = A1.E_ID
        AND A2.Attendee_ID = A1.A_ID
    )
  )
);

-- confirm tables show appropriate columns and data
SELECT * FROM LIBRARY ;
SELECT * FROM PUBLISHER ;
SELECT * FROM R_RESOURCE ;
SELECT * FROM RESOURCE_LOCATION ;
SELECT * FROM BOOK ;
SELECT * FROM VIDEO ;
SELECT * FROM MAG_PAP ;
SELECT * FROM AUTHOR ;
SELECT * FROM CITY ;
SELECT * FROM PERSON ;
SELECT * FROM EMPLOYEE ;
SELECT * FROM VOLUNTEER ;
SELECT * FROM READER ;
SELECT * FROM GUEST ;
SELECT * FROM HOST ;
SELECT * FROM ATTENDEE ;
SELECT * FROM EVENT ;
SELECT * FROM BORROWER ;
SELECT * FROM BORROWS ;
SELECT * FROM RERSERVES ;
SELECT * FROM CREATES ;
SELECT * FROM FUNDS ;
SELECT * FROM HOSTS ;
SELECT * FROM ATTENDS ;
SELECT * FROM MAG_PAP_SUBJECT ;
SELECT * FROM AUTHOR_PHONE ;
SELECT * FROM PUBLISHER_EMAIL ;
SELECT * FROM PUBLISHER_PHONE ;

-- confirm views show appropriate columns and data
SELECT * FROM BORROWED_RESOURCES;
SELECT * FROM LIKED_EVENTS;
SELECT * FROM RESOURCES_OUT_ON_DATE;

-- DROP THE TABLES
-- This is done so that this script can be run again next time without a 
-- ton of errors.
DROP TABLE LIBRARY CASCADE CONSTRAINTS;
DROP TABLE PUBLISHER CASCADE CONSTRAINTS;
DROP TABLE R_RESOURCE CASCADE CONSTRAINTS;
DROP TABLE RESOURCE_LOCATION CASCADE CONSTRAINTS;
DROP TABLE BOOK CASCADE CONSTRAINTS;
DROP TABLE VIDEO CASCADE CONSTRAINTS;
DROP TABLE MAG_PAP CASCADE CONSTRAINTS;
DROP TABLE AUTHOR CASCADE CONSTRAINTS;
DROP TABLE CITY CASCADE CONSTRAINTS;
DROP TABLE PERSON CASCADE CONSTRAINTS;
DROP TABLE EMPLOYEE CASCADE CONSTRAINTS;
DROP TABLE VOLUNTEER CASCADE CONSTRAINTS;
DROP TABLE READER CASCADE CONSTRAINTS;
DROP TABLE GUEST CASCADE CONSTRAINTS;
DROP TABLE HOST CASCADE CONSTRAINTS;
DROP TABLE ATTENDEE CASCADE CONSTRAINTS;
DROP TABLE EVENT CASCADE CONSTRAINTS;
DROP TABLE BORROWER CASCADE CONSTRAINTS;
DROP TABLE BORROWS CASCADE CONSTRAINTS;
DROP TABLE RERSERVES CASCADE CONSTRAINTS;
DROP TABLE CREATES CASCADE CONSTRAINTS;
DROP TABLE FUNDS CASCADE CONSTRAINTS;
DROP TABLE HOSTS CASCADE CONSTRAINTS;
DROP TABLE ATTENDS CASCADE CONSTRAINTS;
DROP TABLE MAG_PAP_SUBJECT CASCADE CONSTRAINTS;
DROP TABLE AUTHOR_PHONE CASCADE CONSTRAINTS;
DROP TABLE PUBLISHER_EMAIL CASCADE CONSTRAINTS;
DROP TABLE PUBLISHER_PHONE CASCADE CONSTRAINTS;

DROP VIEW BORROWED_RESOURCES;
DROP VIEW LIKED_EVENTS;
DROP VIEW RESOURCES_OUT_ON_DATE;

spool off
